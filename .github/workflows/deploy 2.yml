name: Deploy base2ML Website to AWS

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  BUCKET_NAME: base2ml-website

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js application
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync out/ s3://${{ env.BUCKET_NAME }} \
            --delete \
            --region ${{ env.AWS_REGION }}

      - name: Set proper content types
        run: |
          # Set content types for different file types
          aws s3 cp s3://${{ env.BUCKET_NAME }} \
            s3://${{ env.BUCKET_NAME }} \
            --recursive \
            --exclude "*" \
            --include "*.html" \
            --content-type "text/html" \
            --metadata-directive REPLACE

          aws s3 cp s3://${{ env.BUCKET_NAME }} \
            s3://${{ env.BUCKET_NAME }} \
            --recursive \
            --exclude "*" \
            --include "*.css" \
            --content-type "text/css" \
            --metadata-directive REPLACE

          aws s3 cp s3://${{ env.BUCKET_NAME }} \
            s3://${{ env.BUCKET_NAME }} \
            --recursive \
            --exclude "*" \
            --include "*.js" \
            --content-type "application/javascript" \
            --metadata-directive REPLACE

          aws s3 cp s3://${{ env.BUCKET_NAME }} \
            s3://${{ env.BUCKET_NAME }} \
            --recursive \
            --exclude "*" \
            --include "*.json" \
            --content-type "application/json" \
            --metadata-directive REPLACE

      - name: Invalidate CloudFront cache
        if: env.CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

      - name: Deployment summary
        run: |
          echo "ðŸŽ‰ Deployment completed successfully!"
          echo "ðŸ“¦ Uploaded to S3 bucket: ${{ env.BUCKET_NAME }}"
          echo "ðŸ”„ CloudFront cache invalidation: ${{ env.CLOUDFRONT_DISTRIBUTION_ID != '' && 'Completed' || 'Skipped (no distribution ID)' }}"